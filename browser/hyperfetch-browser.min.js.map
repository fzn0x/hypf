{"version":3,"file":"hyperfetch-browser.min.js","mappings":"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","sources":["webpack://hypf/webpack/universalModuleDefinition","webpack://hypf/external umd \"{}\"","webpack://hypf/webpack/bootstrap","webpack://hypf/webpack/runtime/compat get default export","webpack://hypf/webpack/runtime/define property getters","webpack://hypf/webpack/runtime/global","webpack://hypf/webpack/runtime/hasOwnProperty shorthand","webpack://hypf/webpack/runtime/make namespace object","webpack://hypf/./src/utils/constant.ts","webpack://hypf/./src/utils/get-abort-controller.ts","webpack://hypf/./src/utils/default-retries.ts","webpack://hypf/./src/utils/create-request.ts","webpack://hypf/./src/utils/append-params.ts","webpack://hypf/./src/utils/create-http-error.ts","webpack://hypf/./src/utils/create-http-method.ts","webpack://hypf/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"{}\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hypf\", [\"{}\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hypf\"] = factory(require(\"{}\"));\n\telse\n\t\troot[\"hypf\"] = factory(root[\"{}\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__324__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__324__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// disabled in webpack\nimport process from 'node:process'\n\n/**\n * Default maximum recommended timeout in milliseconds.\n * @type {number}\n */\nexport const DEFAULT_MAX_TIMEOUT = 2147483647\n\n/**\n * Default factor for exponential backoff.\n * @type {number}\n */\nexport const DEFAULT_BACKOFF_FACTOR = 0.3\n\n/**\n * Default factor for jitter in delay.\n * @type {number}\n */\nexport const DEFAULT_JITTER_FACTOR = 1\n\n/**\n * Indicates if AbortController is supported.\n * @type {boolean}\n */\nexport const isAbortControllerSupported = typeof globalThis.AbortController === 'function'\n\n/**\n * Indicates if ReadableStream is supported.\n * @type {boolean}\n */\nexport const isReadableStreamSupported = typeof globalThis.ReadableStream === 'function'\n\n/**\n * Indicates if WritableStream is supported.\n * @type {boolean}\n */\nexport const isWriteableStreamSupported = typeof globalThis.WritableStream === 'function'\n\n/**\n * Indicates if WebSocket is supported.\n * @type {boolean}\n */\nexport const isWebsocketSupported = typeof globalThis.WebSocket === 'function'\n\n/**\n * Indicates if WebRTC is supported.\n * @type {boolean}\n */\nexport const isWebRTCSupported = typeof globalThis.RTCPeerConnection === 'function'\n\n/**\n * Indicates if FormData is supported.\n * @type {boolean}\n */\nexport const isFormDataSupported = typeof globalThis.FormData === 'function'\n\n/**\n * Indicates if the code is running in a Node.js environment.\n * @type {boolean}\n */\nexport const isNode = typeof process !== 'undefined' && process.release.name === 'node'\n","import { isAbortControllerSupported } from './constant.js'\n\n/**\n * Returns the AbortController instance if supported, otherwise returns null.\n *\n * @returns {AbortController|null} The AbortController instance or null if not supported.\n */\nexport const getAbortController = () => (isAbortControllerSupported ? global.abortController : null)\n","/**\n * Calculates the exponential backoff time.\n *\n * @param {number} retryCount - The number of retries attempted.\n * @param {number} factor - The factor to multiply the backoff time.\n *\n * @returns {number} The calculated backoff time in milliseconds.\n */\nexport const defaultBackoff = (retryCount: number, factor: number) =>\n  Math.pow(2, retryCount) * 1000 * factor // Exponential backoff, starting from 1 second\n\n/**\n * Generates a random delay time with a given factor.\n *\n * @param {number} factor - The factor to multiply the jitter time.\n *\n * @returns {number} The calculated jitter time in milliseconds.\n */\nexport const defaultJitter = (factor: number) => Math.random() * 1000 * factor // Randomized delay up to 1 second\n","import type { InitOptions } from '../types/init.js'\nimport type { RequestFunction } from '../types/request.js'\n\nimport {\n  DEFAULT_BACKOFF_FACTOR,\n  DEFAULT_JITTER_FACTOR,\n  DEFAULT_MAX_TIMEOUT,\n  isAbortControllerSupported,\n  isNode,\n  isReadableStreamSupported,\n  isWebRTCSupported,\n  isWebsocketSupported,\n  isWriteableStreamSupported,\n} from './constant.js'\n\nimport { appendParams } from './append-params.js'\nimport { createHTTPError } from './create-http-error.js'\nimport { defaultBackoff, defaultJitter } from './default-retries.js'\n\n/**\n * Creates and sends an HTTP request.\n *\n * @param {string} url - The URL to send the request to.\n * @param {object} options - The options for the request, including method, headers, etc.\n * @param {object} data - The data to be sent with the request.\n * @param {InitOptions} initOptions - Initialization options including baseUrl, hooks, etc.\n *\n * @returns {Promise<[Error | null, any]>} A promise that resolves with an array containing an error (if any) and the response data.\n *\n * @throws {Error} If the request fails and `throwOnError` is true.\n */\nexport const createRequest: RequestFunction = async (\n  url = '',\n  options = {},\n  data,\n  { baseUrl, hooks, DEBUG, throwOnError }: InitOptions = Object.create(null)\n): Promise<[Error | null, null]> => {\n  const {\n    method = 'GET',\n    retries = 0,\n    backoff = defaultBackoff,\n    jitter = false,\n    jitterFactor = DEFAULT_JITTER_FACTOR,\n    backoffFactor = DEFAULT_BACKOFF_FACTOR,\n    timeout = DEFAULT_MAX_TIMEOUT,\n    retryOnTimeout = false,\n    params,\n    headers = {},\n    signal,\n    ...otherOptions\n  } = options\n\n  try {\n    // Execute pre-request hook\n    if (hooks?.preRequest) {\n      hooks.preRequest(url, options)\n    }\n\n    const fullUrl = `${baseUrl}${url}`\n\n    const reqHeaders = new Headers(headers)\n\n    // Automatically detect and add Content-Length based on payload length\n    const textEncoder = new TextEncoder()\n    if (!reqHeaders.get('Content-Length') && data) {\n      if (typeof data === 'string') {\n        reqHeaders.set('Content-Length', String(textEncoder.encode(data).length))\n      } else if (reqHeaders.get('Content-Length')?.includes('application/json')) {\n        reqHeaders.set('Content-Length', String(textEncoder.encode(JSON.stringify(data)).length))\n      }\n    }\n\n    // Set default Content-Type to application/json if not provided\n    if (!reqHeaders.get('Content-Type') && data && typeof data === 'object') {\n      if (!(((data as { body: FormData })?.body || data) instanceof FormData)) {\n        reqHeaders.set('Content-Type', 'application/json')\n      }\n    }\n\n    // Execute pre-timeout hook\n    if (hooks?.preTimeout) {\n      hooks.preTimeout(url, options)\n    }\n\n    if (isAbortControllerSupported) {\n      // Expose the AbortController instance\n      global.abortController = new AbortController()\n\n      // Use the external AbortController instance\n      global.abortSignal = signal ? signal : global.abortController.signal\n    }\n\n    const timeoutId =\n      timeout && isAbortControllerSupported\n        ? setTimeout(() => {\n            global.abortController.abort()\n\n            // Execute post-timeout hook\n            if (hooks?.postTimeout) {\n              hooks.postTimeout(url, options)\n            }\n          }, timeout)\n        : undefined\n\n    // Append params to the URL\n    const urlWithParams = params ? appendParams(fullUrl, params) : fullUrl\n\n    if (isReadableStreamSupported && !isWriteableStreamSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    if (!isReadableStreamSupported && isWriteableStreamSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    if (isReadableStreamSupported && isWriteableStreamSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    // WebRTC is supported, allowing for full duplex communication.\n    if (isWebRTCSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    // WebSockets are supported, and thus full duplex communication is possible.\n    if (isWebsocketSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n\n    const requestBody =\n      options.body instanceof FormData\n        ? options.body\n        : Object.keys(data as { [key: string]: unknown }).length !== 0\n          ? JSON.stringify(data)\n          : undefined\n\n    const requestOptions = {\n      method,\n      signal: isAbortControllerSupported ? global.abortSignal : null,\n      headers: reqHeaders,\n      ...otherOptions,\n      body: requestBody,\n    }\n\n    if (requestBody instanceof FormData) {\n      requestOptions.headers.delete('Content-Type')\n    }\n\n    const responsePromise = fetch(urlWithParams, requestOptions)\n\n    clearTimeout(timeoutId)\n\n    const response = await responsePromise\n\n    const contentType = response.headers.get('content-type')\n\n    const responseData =\n      contentType && contentType.includes('application/json')\n        ? await response.json()\n        : await response.text()\n\n    if (!response.ok) {\n      throw createHTTPError(response, responseData)\n    }\n\n    // Execute post-request hook\n    if (hooks?.postRequest) {\n      hooks.postRequest(url, options, data, [null, responseData])\n    }\n\n    if (throwOnError) {\n      return responseData\n    }\n\n    return [null, responseData]\n  } catch (error) {\n    // Execute post-request hook for errors\n    if (hooks?.postRequest) {\n      if (error instanceof Error) {\n        hooks.postRequest(url, options, data, [error, null])\n      }\n    }\n\n    if (error instanceof Error) {\n      if (error.name === 'AbortError') {\n        console.error('Request aborted:', error)\n      } else if (retryOnTimeout && error.name === 'TimeoutError' && retries && retries > 0) {\n        const delay =\n          jitter && jitterFactor\n            ? defaultJitter(jitterFactor)\n            : backoff(retries, backoffFactor ? backoffFactor : DEFAULT_BACKOFF_FACTOR)\n        if (DEBUG) {\n          console.warn(\n            `Request timed out. Retrying in ${delay}ms... (Remaining retries: ${retries})`\n          )\n        }\n        // Execute pre-retry hook\n        if (hooks?.preRetry) {\n          hooks.preRetry(url, options, retries, retries)\n        }\n        await new Promise((resolve) => setTimeout(resolve, delay))\n        const [retryErr, retryData] = await createRequest(\n          url,\n          { ...options, retries: retries - 1 },\n          data\n        )\n        // Execute post-retry hook\n        if (hooks?.postRetry) {\n          hooks.postRetry(url, options, data, [retryErr, retryData], retries, retries - 1)\n        }\n\n        if (throwOnError) {\n          throw retryErr\n        }\n\n        return [retryErr, retryData]\n      } else if (options.retries && options.retries > 0) {\n        const delay =\n          options.jitter && options.jitterFactor\n            ? defaultJitter(options.jitterFactor)\n            : backoff(\n                options.retries,\n                options.backoffFactor ? options.backoffFactor : DEFAULT_BACKOFF_FACTOR\n              )\n        if (DEBUG) {\n          console.warn(\n            `Request failed. Retrying in ${delay}ms... (Remaining retries: ${options.retries})`\n          )\n        }\n        // Execute pre-retry hook\n        if (hooks?.preRetry) {\n          hooks.preRetry(url, options, options.retries, options.retries)\n        }\n        await new Promise((resolve) => setTimeout(resolve, delay))\n        const [retryErr, retryData] = await createRequest(\n          url,\n          { ...options, retries: options.retries - 1 },\n          data\n        )\n        // Execute post-retry hook\n        if (hooks?.postRetry) {\n          hooks.postRetry(\n            url,\n            options,\n            data,\n            [retryErr, retryData],\n            options.retries,\n            options.retries - 1\n          )\n        }\n\n        if (throwOnError) {\n          throw retryErr\n        }\n\n        return [retryErr, retryData]\n      } else {\n        if (throwOnError) {\n          throw error\n        }\n\n        return [error, null]\n      }\n    }\n\n    if (throwOnError) {\n      throw error\n    }\n\n    return [error as Error, null]\n  }\n}\n","/**\n * Appends query parameters to a given URL.\n *\n * @param {string} url - The base URL to which the parameters will be appended.\n * @param {Record<string, string | number>} [params] - An optional object containing the query parameters as key-value pairs.\n *\n * @returns {string} The URL with the appended query parameters.\n */\nexport const appendParams = (url: string, params?: Record<string, string | number>): string => {\n  if (!params) {\n    return url\n  }\n\n  const urlWithParams = new URL(url)\n  Object.entries(params).forEach(([key, value]) =>\n    urlWithParams.searchParams.append(key, String(value))\n  )\n\n  return urlWithParams.toString()\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Creates an HTTP error object based on the response and response data.\n *\n * @param {Response} response - The Response object from the fetch request.\n * @param {Response} responseData - The data returned in the response.\n *\n * @returns {Error} An Error object with additional properties for response and responseData.\n */\nexport function createHTTPError(response: Response, responseData: Response) {\n  const code = response.status || response.status === 0 ? response.status : ''\n  const title = response.statusText || ''\n  const status = `${code} ${title}`.trim()\n  const reason = status ? `status code ${status}` : 'an unknown error'\n  const error = new Error(reason)\n\n  error.name = 'HTTPError'\n  ;(error as any).response = response\n  ;(error as any).data = responseData\n\n  return error\n}\n","import type { RequestMethod } from '../types/request.js'\nimport type { InitOptions } from '../types/init.js'\n\nimport { createRequest } from './create-request.js'\n\n/**\n * Creates and sends an HTTP request using the specified method.\n *\n * @param {string} url - The URL to send the request to.\n * @param {RequestMethod} [method='GET'] - The HTTP method to use for the request.\n * @param {object} [options=Object.create(null)] - The options for the request, including headers, retries, etc.\n * @param {object} [data=Object.create(null)] - The data to be sent with the request.\n * @param {InitOptions} [initOptions] - Initialization options including baseUrl, hooks, etc.\n *\n * @returns {Promise<[Error | null, any]>} A promise that resolves with an array containing an error (if any) and the response data.\n */\nexport const createHTTPMethod = (\n  url: string,\n  method: RequestMethod = 'GET',\n  options = Object.create(null),\n  data: { [key: string]: unknown } = Object.create(null),\n  initOptions?: InitOptions\n) => {\n  return createRequest(url, { method, ...options }, data, initOptions)\n}\n","import type { InitOptions } from './types/init.js'\nimport type { HttpRequestFunctions } from './types/request.js'\n\nimport { getAbortController } from './utils/get-abort-controller.js'\nimport { createHTTPMethod } from './utils/create-http-method.js'\n\n/**\n * Initializes the HTTP request functions with a base URL and options.\n *\n * @param {string} [baseUrl=''] - The base URL for all requests.\n * @param {InitOptions} [initOptions=Object.create(null)] - Initialization options.\n *\n * @returns {HttpRequestFunctions} An object containing HTTP request functions.\n *\n * @throws {Error} If `fetch` is not available in the environment.\n */\nfunction init(\n  baseUrl: string = '',\n  initOptions: InitOptions = Object.create(null)\n): HttpRequestFunctions {\n  // Check if fetch is available\n  if (typeof fetch === 'undefined') {\n    throw new Error('This library is intended for use in the browser environment only.')\n  }\n\n  // Override initOptions baseUrl if baseUrl exists\n  if (baseUrl) {\n    initOptions.baseUrl = baseUrl\n  }\n\n  return {\n    get: (url, options, data) => createHTTPMethod(url, 'GET', options, data, initOptions),\n    post: (url, options, data) => createHTTPMethod(url, 'POST', options, data, initOptions),\n    put: (url, options, data) => createHTTPMethod(url, 'PUT', options, data, initOptions),\n    delete: (url, options, data) => createHTTPMethod(url, 'DELETE', options, data, initOptions),\n    patch: (url, options, data) => createHTTPMethod(url, 'PATCH', options, data, initOptions),\n    head: (url, options, data) => createHTTPMethod(url, 'HEAD', options, data, initOptions),\n    options: (url, options, data) => createHTTPMethod(url, 'OPTIONS', options, data, initOptions),\n    getAbortController,\n  }\n}\n\nexport default { init }\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__324__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","DEFAULT_MAX_TIMEOUT","DEFAULT_BACKOFF_FACTOR","DEFAULT_JITTER_FACTOR","isAbortControllerSupported","AbortController","isReadableStreamSupported","ReadableStream","isWriteableStreamSupported","WritableStream","isWebsocketSupported","WebSocket","isWebRTCSupported","RTCPeerConnection","isNode","FormData","name","getAbortController","abortController","defaultBackoff","retryCount","factor","Math","pow","defaultJitter","random","createRequest","url","options","data","baseUrl","hooks","DEBUG","throwOnError","create","method","retries","backoff","jitter","jitterFactor","backoffFactor","timeout","retryOnTimeout","params","headers","signal","otherOptions","preRequest","fullUrl","reqHeaders","Headers","textEncoder","TextEncoder","set","String","encode","length","includes","JSON","stringify","body","preTimeout","abortSignal","timeoutId","setTimeout","abort","postTimeout","urlWithParams","URL","entries","forEach","searchParams","append","toString","appendParams","duplex","requestBody","keys","requestOptions","delete","responsePromise","fetch","clearTimeout","response","contentType","responseData","json","text","ok","status","statusText","trim","error","Error","createHTTPError","postRequest","delay","console","warn","preRetry","Promise","resolve","retryErr","retryData","postRetry","createHTTPMethod","initOptions","init","post","put","patch","head"],"sourceRoot":""}