{"version":3,"file":"hyperfetch-browser.min.js","mappings":"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","sources":["webpack://hypf/webpack/universalModuleDefinition","webpack://hypf/external umd \"{}\"","webpack://hypf/webpack/bootstrap","webpack://hypf/webpack/runtime/compat get default export","webpack://hypf/webpack/runtime/define property getters","webpack://hypf/webpack/runtime/global","webpack://hypf/webpack/runtime/hasOwnProperty shorthand","webpack://hypf/webpack/runtime/make namespace object","webpack://hypf/./src/utils/constant.ts","webpack://hypf/./src/utils/get-abort-controller.ts","webpack://hypf/./src/utils/create-http-error.ts","webpack://hypf/./src/utils/default-retries.ts","webpack://hypf/./src/utils/create-request.ts","webpack://hypf/./src/utils/append-params.ts","webpack://hypf/./src/utils/create-http-method.ts","webpack://hypf/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"{}\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hypf\", [\"{}\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hypf\"] = factory(require(\"{}\"));\n\telse\n\t\troot[\"hypf\"] = factory(root[\"{}\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__324__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__324__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// disabled in webpack\nimport process from 'node:process'\n\n/**\n * Default maximum recommended timeout in milliseconds.\n * @type {number}\n */\nexport const DEFAULT_MAX_TIMEOUT = 2147483647\n\n/**\n * Default factor for exponential backoff.\n * @type {number}\n */\nexport const DEFAULT_BACKOFF_FACTOR = 0.3\n\n/**\n * Default factor for jitter in delay.\n * @type {number}\n */\nexport const DEFAULT_JITTER_FACTOR = 1\n\n/**\n * Indicates if AbortController is supported.\n * @type {boolean}\n */\nexport const isAbortControllerSupported = typeof globalThis.AbortController === 'function'\n\n/**\n * Indicates if ReadableStream is supported.\n * @type {boolean}\n */\nexport const isReadableStreamSupported = typeof globalThis.ReadableStream === 'function'\n\n/**\n * Indicates if WritableStream is supported.\n * @type {boolean}\n */\nexport const isWriteableStreamSupported = typeof globalThis.WritableStream === 'function'\n\n/**\n * Indicates if WebSocket is supported.\n * @type {boolean}\n */\nexport const isWebsocketSupported = typeof globalThis.WebSocket === 'function'\n\n/**\n * Indicates if WebRTC is supported.\n * @type {boolean}\n */\nexport const isWebRTCSupported = typeof globalThis.RTCPeerConnection === 'function'\n\n/**\n * Indicates if FormData is supported.\n * @type {boolean}\n */\nexport const isFormDataSupported = typeof globalThis.FormData === 'function'\n\n/**\n * Indicates if the code is running in a Node.js environment.\n * @type {boolean}\n */\nexport const isNode = typeof process !== 'undefined' && process.release.name === 'node'\n","import { isAbortControllerSupported } from './constant.js'\n\n/**\n * Returns the AbortController instance if supported, otherwise returns null.\n *\n * @returns {AbortController|null} The AbortController instance or null if not supported.\n */\nexport const getAbortController = () => (isAbortControllerSupported ? global.abortController : null)\n","interface HTTPError extends Error {\n  code?: string\n  request?: Request\n  response: Response\n  isHypfError: boolean\n  originalError?: unknown\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Creates an HTTP error object based on the response and response data.\n *\n * @param {Response} response - The Response object from the fetch request.\n * @param {Request} request - The Request object used to make the fetch request.\n * @param {string} code - The error code to use for the error object.\n *\n * @returns {Error} An Error object with additional properties for response, request, and code.\n */\nexport function createHTTPError(response: Response, request?: Request, code?: string): Error {\n  try {\n    const title = response.statusText\n    if (!code) {\n      code =\n        response.status || response.status === 0 ? String(response.status) : 'Unknown Status Code'\n    }\n    const status = `${code} ${title}`.trim()\n    const reason = status ? `Status code: ${status}` : 'An unknown error occurred'\n\n    const error = new Error(reason) as HTTPError\n    error.name = 'HTTPError'\n    error.code = code\n    error.request = request\n    error.response = response\n    error.isHypfError = true\n\n    // Maintain stack trace (optional and based on environment support)\n    Object.setPrototypeOf(error, Object.getPrototypeOf(new Error()))\n\n    return error\n  } catch (e) {\n    const genericError = new Error(\n      'An error occurred while creating the HTTP error object'\n    ) as HTTPError\n    genericError.name = 'HTTPErrorCreationFailure'\n    genericError.originalError = e\n    genericError.isHypfError = true\n\n    return genericError\n  }\n}\n","/**\n * Calculates the exponential backoff time.\n *\n * @param {number} retryCount - The number of retries attempted.\n * @param {number} factor - The factor to multiply the backoff time.\n *\n * @returns {number} The calculated backoff time in milliseconds.\n */\nexport const defaultBackoff = (retryCount: number, factor: number) =>\n  Math.pow(2, retryCount) * 1000 * factor // Exponential backoff, starting from 1 second\n\n/**\n * Generates a random delay time with a given factor.\n *\n * @param {number} factor - The factor to multiply the jitter time.\n *\n * @returns {number} The calculated jitter time in milliseconds.\n */\nexport const defaultJitter = (factor: number) => Math.random() * 1000 * factor // Randomized delay up to 1 second\n","import type { InitOptions } from '../types/init.js'\r\nimport type { RequestFunction } from '../types/request.js'\r\n\r\nimport {\r\n  DEFAULT_BACKOFF_FACTOR,\r\n  DEFAULT_JITTER_FACTOR,\r\n  DEFAULT_MAX_TIMEOUT,\r\n  isAbortControllerSupported,\r\n  isNode,\r\n  isReadableStreamSupported,\r\n  isWebRTCSupported,\r\n  isWebsocketSupported,\r\n  isWriteableStreamSupported,\r\n} from './constant.js'\r\n\r\nimport { appendParams } from './append-params.js'\r\nimport { createHTTPError } from './create-http-error.js'\r\nimport { defaultBackoff, defaultJitter } from './default-retries.js'\r\n\r\n/**\r\n * Creates and sends an HTTP request.\r\n *\r\n * @param {string} url - The URL to send the request to.\r\n * @param {object} options - The options for the request, including method, headers, etc.\r\n * @param {object} data - The data to be sent with the request.\r\n * @param {InitOptions} initOptions - Initialization options including baseUrl, hooks, etc.\r\n *\r\n * @returns {Promise<[Error | null, any]>} A promise that resolves with an array containing an error (if any) and the response data.\r\n *\r\n * @throws {Error} If the request fails and `throwOnError` is true.\r\n */\r\nexport const createRequest: RequestFunction = async (\r\n  url = '',\r\n  options = {\r\n    backoff: defaultBackoff,\r\n    jitter: false,\r\n    jitterFactor: DEFAULT_JITTER_FACTOR,\r\n    backoffFactor: DEFAULT_BACKOFF_FACTOR,\r\n    timeout: DEFAULT_MAX_TIMEOUT,\r\n    method: 'GET',\r\n    retries: 0,\r\n    retryOnTimeout: false,\r\n    dryRun: false,\r\n    headers: {},\r\n  },\r\n  data,\r\n  { baseUrl, hooks, debug, throwOnError }: InitOptions = Object.create(null)\r\n) => {\r\n  try {\r\n    // Execute pre-request hook\r\n    if (hooks?.preRequest) {\r\n      hooks.preRequest(url, options)\r\n    }\r\n\r\n    // Execute pre-timeout hook\r\n    if (hooks?.preTimeout) {\r\n      hooks.preTimeout(url, options)\r\n    }\r\n\r\n    const {\r\n      method = 'GET',\r\n      timeout = DEFAULT_MAX_TIMEOUT,\r\n      params,\r\n      headers = {},\r\n      signal,\r\n      dryRun,\r\n      ...otherOptions\r\n    } = options\r\n\r\n    const fullUrl = `${baseUrl || ''}${url}`\r\n\r\n    const reqHeaders = new Headers(headers)\r\n\r\n    // Automatically detect and add Content-Length based on payload length\r\n    const textEncoder = new TextEncoder()\r\n    if (!reqHeaders.get('Content-Length') && data) {\r\n      if (typeof data === 'string') {\r\n        reqHeaders.set('Content-Length', String(textEncoder.encode(data).length))\r\n      } else if (reqHeaders.get('Content-Length')?.includes('application/json')) {\r\n        reqHeaders.set('Content-Length', String(textEncoder.encode(JSON.stringify(data)).length))\r\n      }\r\n    }\r\n\r\n    // Set default Content-Type to application/json if not provided\r\n    if (!reqHeaders.get('Content-Type') && data && typeof data === 'object') {\r\n      if (!(((data as { body: FormData })?.body || data) instanceof FormData)) {\r\n        reqHeaders.set('Content-Type', 'application/json')\r\n      }\r\n    }\r\n\r\n    if (isAbortControllerSupported) {\r\n      // Expose the AbortController instance\r\n      global.abortController = new AbortController()\r\n\r\n      // Use the external AbortController instance\r\n      global.abortSignal = signal ? signal : global.abortController.signal\r\n    }\r\n\r\n    // Append params to the URL\r\n    const urlWithParams = params ? appendParams(fullUrl, params) : fullUrl\r\n\r\n    if (isReadableStreamSupported && !isWriteableStreamSupported && isNode) {\r\n      // @ts-expect-error - Duplex types is not supported\r\n      otherOptions.duplex = 'half'\r\n    }\r\n    if (!isReadableStreamSupported && isWriteableStreamSupported && isNode) {\r\n      // @ts-expect-error - Duplex types is not supported\r\n      otherOptions.duplex = 'half'\r\n    }\r\n    if (isReadableStreamSupported && isWriteableStreamSupported && isNode) {\r\n      // @ts-expect-error - Duplex types is not supported\r\n      otherOptions.duplex = 'half'\r\n    }\r\n    // WebRTC is supported, allowing for full duplex communication.\r\n    if (isWebRTCSupported && isNode) {\r\n      // @ts-expect-error - Duplex types is not supported\r\n      otherOptions.duplex = 'half'\r\n    }\r\n    // WebSockets are supported, and thus full duplex communication is possible.\r\n    if (isWebsocketSupported && isNode) {\r\n      // @ts-expect-error - Duplex types is not supported\r\n      otherOptions.duplex = 'half'\r\n    }\r\n\r\n    const requestBody =\r\n      options.body instanceof FormData\r\n        ? options.body\r\n        : Object.keys(data as { [key: string]: unknown }).length !== 0\r\n          ? JSON.stringify(data)\r\n          : undefined\r\n\r\n    const requestOptions = {\r\n      method,\r\n      signal: isAbortControllerSupported ? global.abortSignal : null,\r\n      headers: reqHeaders,\r\n      ...otherOptions,\r\n      body: requestBody,\r\n    }\r\n\r\n    if (requestBody instanceof FormData) {\r\n      requestOptions.headers.delete('Content-Type')\r\n    }\r\n\r\n    // Start timeout before fetch\r\n    const timeoutId =\r\n      timeout && isAbortControllerSupported\r\n        ? setTimeout(() => {\r\n            global.abortController.abort()\r\n\r\n            // Execute post-timeout hook\r\n            if (hooks?.postTimeout) {\r\n              hooks.postTimeout(url, options)\r\n            }\r\n          }, timeout)\r\n        : undefined\r\n\r\n    const request = new Request(urlWithParams, requestOptions)\r\n\r\n    if (throwOnError && dryRun) {\r\n      return request as unknown as [null, Request]\r\n    }\r\n\r\n    const responsePromise = fetch(request)\r\n\r\n    clearTimeout(timeoutId)\r\n\r\n    const response = await responsePromise\r\n\r\n    const contentType = response.headers.get('content-type')\r\n\r\n    const responseData =\r\n      contentType && contentType.includes('application/json')\r\n        ? await response.json()\r\n        : await response.text()\r\n\r\n    if (!response.ok) {\r\n      throw createHTTPError(response, request)\r\n    }\r\n\r\n    // Execute post-request hook\r\n    if (hooks?.postRequest) {\r\n      hooks.postRequest(url, options, data, [null, responseData])\r\n    }\r\n\r\n    if (throwOnError) {\r\n      const wrappedResponse = new Response(\r\n        contentType && contentType.includes('application/json')\r\n          ? JSON.stringify(responseData)\r\n          : responseData,\r\n        {\r\n          headers: {\r\n            'Content-Type': contentType || 'text/plain',\r\n          },\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n        }\r\n      )\r\n\r\n      // TODO: fix TS bug, wrapped response is part of throwOnError: true but types converted to throwOnError: false\r\n      return wrappedResponse as unknown as [null, Response]\r\n    }\r\n\r\n    return [null, responseData]\r\n  } catch (error) {\r\n    // Execute post-request hook for errors\r\n    if (hooks?.postRequest) {\r\n      if (error instanceof Error) {\r\n        hooks.postRequest(url, options, data, [error, null])\r\n      }\r\n    }\r\n\r\n    if (error instanceof Error) {\r\n      if (error.name === 'AbortError') {\r\n        console.error('Request aborted:', error)\r\n      } else if (\r\n        options.retryOnTimeout &&\r\n        error.name === 'TimeoutError' &&\r\n        options.retries &&\r\n        options.retries > 0\r\n      ) {\r\n        const delay =\r\n          options.jitter && options.jitterFactor\r\n            ? defaultJitter(options.jitterFactor)\r\n            : options.backoff\r\n              ? defaultBackoff(\r\n                  options.retries,\r\n                  options.backoffFactor ? options.backoffFactor : DEFAULT_BACKOFF_FACTOR\r\n                )\r\n              : 0\r\n        if (debug) {\r\n          console.warn(\r\n            `Request timed out. Retrying in ${delay}ms... (Remaining retries: ${options.retries})`\r\n          )\r\n        }\r\n        // Execute pre-retry hook\r\n        if (hooks?.preRetry) {\r\n          hooks.preRetry(url, options, options.retries, options.retries)\r\n        }\r\n        await new Promise((resolve) => setTimeout(resolve, delay))\r\n        const [retryErr, retryData] = await createRequest(\r\n          url,\r\n          { ...options, retries: options.retries - 1 },\r\n          data\r\n        )\r\n        // Execute post-retry hook\r\n        if (hooks?.postRetry) {\r\n          hooks.postRetry(\r\n            url,\r\n            options,\r\n            data,\r\n            [retryErr, retryData],\r\n            options.retries,\r\n            options.retries - 1\r\n          )\r\n        }\r\n\r\n        if (throwOnError) {\r\n          throw retryErr\r\n        }\r\n\r\n        return [retryErr, retryData]\r\n      } else if (options.retries && options.retries > 0) {\r\n        const delay =\r\n          options.jitter && options.jitterFactor\r\n            ? defaultJitter(options.jitterFactor)\r\n            : options.backoff\r\n              ? defaultBackoff(\r\n                  options.retries,\r\n                  options.backoffFactor ? options.backoffFactor : DEFAULT_BACKOFF_FACTOR\r\n                )\r\n              : 0\r\n        if (debug) {\r\n          console.warn(\r\n            `Request failed. Retrying in ${delay}ms... (Remaining retries: ${options.retries})`\r\n          )\r\n        }\r\n        // Execute pre-retry hook\r\n        if (hooks?.preRetry) {\r\n          hooks.preRetry(url, options, options.retries, options.retries)\r\n        }\r\n        await new Promise((resolve) => setTimeout(resolve, delay))\r\n        const [retryErr, retryData] = await createRequest(\r\n          url,\r\n          { ...options, retries: options.retries - 1 },\r\n          data\r\n        )\r\n        // Execute post-retry hook\r\n        if (hooks?.postRetry) {\r\n          hooks.postRetry(\r\n            url,\r\n            options,\r\n            data,\r\n            [retryErr, retryData],\r\n            options.retries,\r\n            options.retries - 1\r\n          )\r\n        }\r\n\r\n        if (throwOnError) {\r\n          throw retryErr\r\n        }\r\n\r\n        return [retryErr, retryData]\r\n      } else {\r\n        if (throwOnError) {\r\n          throw error\r\n        }\r\n\r\n        return [error, null]\r\n      }\r\n    }\r\n\r\n    if (throwOnError) {\r\n      throw error\r\n    }\r\n\r\n    return [error as Error, null]\r\n  }\r\n}\r\n","/**\n * Appends query parameters to a given URL.\n *\n * @param {string} url - The base URL to which the parameters will be appended.\n * @param {Record<string, string | number>} [params] - An optional object containing the query parameters as key-value pairs.\n *\n * @returns {string} The URL with the appended query parameters.\n */\nexport const appendParams = (url: string, params?: Record<string, string | number>): string => {\n  if (!params) {\n    return url\n  }\n\n  const urlWithParams = new URL(url)\n  Object.entries(params).forEach(([key, value]) =>\n    urlWithParams.searchParams.append(key, String(value))\n  )\n\n  return urlWithParams.toString()\n}\n","import type { RequestMethod, RequestOptions } from '../types/request.js'\nimport type { InitOptions } from '../types/init.js'\n\nimport { createRequest } from './create-request.js'\n\n/**\n * Creates and sends an HTTP request using the specified method.\n *\n * @param {string} url - The URL to send the request to.\n * @param {RequestMethod} [method='GET'] - The HTTP method to use for the request.\n * @param {object} [options=Object.create(null)] - The options for the request, including headers, retries, etc.\n * @param {object} [data=Object.create(null)] - The data to be sent with the request.\n * @param {InitOptions} [initOptions] - Initialization options including baseUrl, hooks, etc.\n *\n * @returns {Promise<[Error | null, any]>} A promise that resolves with an array containing an error (if any) and the response data.\n */\nexport const createHTTPMethod = (\n  url: string,\n  method: RequestMethod = 'GET',\n  options: RequestOptions = Object.create(null),\n  data: { [key: string]: unknown } = Object.create(null),\n  initOptions?: InitOptions\n): Promise<[Error | null, unknown]> => {\n  if (options.initOptions) {\n    initOptions = options.initOptions\n  }\n\n  delete options.initOptions\n\n  return createRequest(url, { method, ...options }, data, initOptions)\n}\n","import type { InitOptions } from './types/init.js'\r\nimport type { HttpRequestFunctions } from './types/request.js'\r\n\r\nimport { getAbortController } from './utils/get-abort-controller.js'\r\nimport { createHTTPMethod } from './utils/create-http-method.js'\r\nimport { createHTTPError } from './utils/create-http-error.js'\r\n\r\n/**\r\n * Initializes the HTTP request functions with a base URL and options.\r\n *\r\n * @param {string} [baseUrl=''] - The base URL for all requests.\r\n * @param {InitOptions} [initOptions=Object.create(null)] - Initialization options.\r\n *\r\n * @returns {HttpRequestFunctions} An object containing HTTP request functions.\r\n *\r\n * @throws {Error} If `fetch` is not available in the environment.\r\n */\r\nexport function init(\r\n  baseUrl: string = '',\r\n  initOptions: InitOptions = Object.create(null)\r\n): HttpRequestFunctions {\r\n  // Check if fetch is available\r\n  // TODO: or use hypf fetch polyfill\r\n  if (typeof fetch === 'undefined') {\r\n    throw new Error(\r\n      'This library is intended for use in the native `fetch()` supported environment only.'\r\n    )\r\n  }\r\n\r\n  // Override initOptions baseUrl if baseUrl exists\r\n  if (baseUrl) {\r\n    initOptions.baseUrl = baseUrl\r\n  }\r\n\r\n  return {\r\n    get: (url, options, data) => createHTTPMethod(url, 'GET', options, data, initOptions),\r\n    post: (url, options, data) => createHTTPMethod(url, 'POST', options, data, initOptions),\r\n    put: (url, options, data) => createHTTPMethod(url, 'PUT', options, data, initOptions),\r\n    delete: (url, options, data) => createHTTPMethod(url, 'DELETE', options, data, initOptions),\r\n    patch: (url, options, data) => createHTTPMethod(url, 'PATCH', options, data, initOptions),\r\n    head: (url, options, data) => createHTTPMethod(url, 'HEAD', options, data, initOptions),\r\n    options: (url, options, data) => createHTTPMethod(url, 'OPTIONS', options, data, initOptions),\r\n\r\n    createHTTPMethod,\r\n    createHTTPError,\r\n    getAbortController,\r\n  }\r\n}\r\n\r\nexport default { init }\r\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__324__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","DEFAULT_MAX_TIMEOUT","isAbortControllerSupported","AbortController","isReadableStreamSupported","ReadableStream","isWriteableStreamSupported","WritableStream","isWebsocketSupported","WebSocket","isWebRTCSupported","RTCPeerConnection","isNode","FormData","name","getAbortController","abortController","createHTTPError","response","request","code","title","statusText","status","String","trim","reason","error","Error","isHypfError","setPrototypeOf","getPrototypeOf","genericError","originalError","defaultBackoff","retryCount","factor","Math","pow","defaultJitter","random","createRequest","url","options","backoff","jitter","jitterFactor","backoffFactor","timeout","method","retries","retryOnTimeout","dryRun","headers","data","baseUrl","hooks","debug","throwOnError","create","preRequest","preTimeout","params","signal","otherOptions","fullUrl","reqHeaders","Headers","textEncoder","TextEncoder","set","encode","length","includes","JSON","stringify","body","abortSignal","urlWithParams","URL","entries","forEach","searchParams","append","toString","appendParams","duplex","requestBody","keys","requestOptions","delete","timeoutId","setTimeout","abort","postTimeout","Request","responsePromise","fetch","clearTimeout","contentType","responseData","json","text","ok","postRequest","Response","delay","console","warn","preRetry","Promise","resolve","retryErr","retryData","postRetry","createHTTPMethod","initOptions","init","post","put","patch","head"],"sourceRoot":""}